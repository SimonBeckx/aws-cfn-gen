---
AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Create a Bastion host


Resources:

  BastionEC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMFullAccess"
        - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"

  BastionEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref 'BastionEC2Role']

  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      DisableApiTermination: false
      IamInstanceProfile: !Ref 'BastionEC2InstanceProfile'
      ImageId: ami-09def150731bdbcc2 # Amazon Linux 2 ami for eu-central-1
      InstanceType: {{ bastion.instance_type | default('t2.micro') }}
      KeyName: "{{ bastion.keypair_name }}"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: {{ vpc_publicsubnet }}
          GroupSet:
            - {{ vpc_sg_dmz }}
      UserData:
        Fn::Base64: |
          Content-Type: multipart/mixed; boundary="===============8943416319660996992=="
          MIME-Version: 1.0

          --===============8943416319660996992==
          Content-Type: text/x-shellscript; charset="us-ascii"
          MIME-Version: 1.0
          Content-Transfer-Encoding: 7bit
          Content-Disposition: attachment; filename="install_sw.cloudinit"

          #!/bin/bash -xe

          yum install -y tcpdump mariadb telnet python-pip
          yum update -y

{% if bastion.pubkeys is defined or bastion.hostkeys is defined %}
          --===============8943416319660996992==
          Content-Type: text/cloud-config; charset="us-ascii"
          MIME-Version: 1.0
          Content-Transfer-Encoding: 7bit
          Content-Disposition: attachment; filename="ec2_user_pubkeys.cloudinit"

          #cloud-config
          runcmd:
{%   for key in bastion.pubkeys | default([]) %}
            - echo '{{ key.key }}' >> /home/ec2-user/.ssh/authorized_keys
{%   endfor %}
{%   for key in bastion.hostkeys | default([]) %}
            - printf -- "{{ key.key }}" > {{ key.location }}
{%   endfor %}

{% endif %}
      Tags:
        - Key: "Name"
          Value: "Bastion host"
        - Key: "Application"
          Value: "{{ application }}"
        - Key: "Environment"
          Value: "{{ env }}"

{% if bastion.route53_sns_topic is defined %}
  RecordSetForBastionHost:
    Type: Custom::IPv4
    Properties:
      ServiceToken: "{{ bastion.route53_sns_topic }}"
      Source: "{{ bastion.hostname }}.{{ bastion.domain }}"
      Target: !GetAtt BastionHost.PublicIp
      RecordType: A
{% endif %}

Outputs:
  Application:
    Value: !Ref BastionHost
    Description: The Bastion Host
    Export:
      Name: !Sub "${AWS::StackName}-BastionHost"