---
AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Create Lambda functions

Resources:
{% for lambda in lambda_functions | default([]) %}
  {{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }}:
    Type: AWS::Lambda::Function
    Properties:
{%   if 'java' in lambda.runtime %}
      Handler: "{{ lambda.name }}.{{ lambda.class_name | default('Handler') }}::{{ lambda.handler }}"
{%   else %}
      Handler: "{{ lambda.name }}.{{ lambda.handler }}"
{% endif %}
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaBasicExecutionRole"
{%   if lambda.environment is defined %}
      Environment:
        Variables:
{%     for env in lambda.environment %}
         {{ env.name }}: "{{ env.value }}"
{%     endfor %}
{%   endif %}
      Code:
        S3Bucket: "{{ lambda.code.s3_bucket }}"
        S3Key: "{{ lambda.code.s3_key }}"
      Runtime: {{ lambda.runtime | default('python2.7') }}
      Tags:
        - Key: Application
          Value: "{{ application }}"
        - Key: Environment
          Value: "{{ env }}"
        - Key: Customer
          Value: "{{ customer | default('NA') }}"

{%   for liv in lambda.invoke_permissions | default([]) %}
{%     if liv.type == 'predefined' and liv.name == 'logs' %}
  {{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }}CWLogsInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref {{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }}
      Principal: !Sub "logs.${AWS::Region}.amazonaws.com"
      SourceAccount: !Ref AWS::AccountId
{%     endif %}
{%   endfor %}
{% endfor %}

Outputs:
{% for lambda in lambda_functions %}
  {{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }}Output:
    Value: !Ref {{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }}
    Description: "Lambda function {{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }} resource logical name"
    Export:
      Name: !Sub "${AWS::StackName}-{{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }}"
  {{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }}ArnOutput:
    Value: !GetAtt {{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }}.Arn
    Description: "Lambda function {{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }} Arn"
    Export:
      Name: !Sub "${AWS::StackName}-{{ lambda.name | replace('-', ' ') | replace('.', ' ') | title | replace(' ', '') }}Arn"
{% endfor %}